{
  // this configuration file works by first loading all top-level
  // configuration items and then will load the specified environment
  // on top, this provides a layering affect. environment names can be
  // anything, and just require definition in this file. There's
  // two predefined environments, 'backtesting' and 'live', feel free
  // to add more!

  "debug-mode": "false",

  "environment": "backtesting", // "live-paper", "backtesting", "backtesting-desktop", "live-interactive", "live-interactive-iqfeed"

  // algorithm class selectors
  "algorithm-type-name": "BinanceHybridBacktest",
  //"algorithm-type-name": "BinanceBacktesting",
  //"algorithm-type-name": "ChinaIndicesFuturesDemoAlgorithm",
  //"algorithm-type-name": "ETFBacktest",

  // Algorithm language selector - options CSharp, FSharp, VisualBasic, Python, Java
  //"algorithm-language": "Python",
  "algorithm-language": "CSharp",
  //"algorithm-language": "Python", //直接打开

  //Physical DLL location
  "algorithm-location": "QuantConnect.Algorithm.CSharp.dll",
  //"algorithm-location": "../../../Algorithm.Python/DeribitBacktestTemplate.py",
  //"algorithm-location": "../../../Algorithm.Python/sigma_models/svi_deribit_zyd.py",
  //"algorithm-path-python": "../../../Algorithm.Python/sigma_models/",
  //"algorithm-location": "QuantConnect.Algorithm.FSharp.dll",
  //"algorithm-location": "QuantConnect.Algorithm.VisualBasic.dll",
  //"algorithm-location": "QuantConnect.Algorithm.Java.dll",

  //Jupyter notebook
  //"composer-dll-directory": ".",

  "aviable-environment": {
    "okex": "live-okex-desktop",
    "deribit": "live-deribit-desktop",
    "mom": "live-mom-desktop"
  },

  "security-data-feeds": {
    "Crypto": ["Quote"],
    "Future": ["Quote"] 
  },
  //  Key: "Equity" "Option" "Future"  "Crypto"  Value : "Quote"  "Trade"  "OpenInterest"

  "upper-threshold-data-feeds": {
    "Tick": 10000,
    "Second": 1000,
    "Minute": 1000,
    "Hour": 1000,
    "Daily": 1000
  },

  "lower-threshold-data-feeds": {
    "Tick": 2000,
    "Second": 100,
    "Minute": 100,
    "Hour": 100,
    "Daily": 100
  },

  // engine
  "data-folder": "/mnt/data/share/quantconnect/",

  // web address for history data 
  // Singapore Server
  //"cloud-api-url": "http://47.241.68.145:18080/api/v1",
  //Hong-Kong Server
  "cloud-api-url": "http://119.8.115.89:2020/",
  //download SymbolProperty.csv file
  "download-symbol-property": false,

  "margin-call-frequency": 15,

  "push-option-price": false,
  "option-price-output-host": "localhost",
  "option-price-output-port": "8808",
  "option-price-matrix-underlying": "-5:5:1",
  "option-price-matrix-vol": "-5:5:1",

  // handlers
  "log-handler": "QuantConnect.Logging.CompositeLogHandler",
  "messaging-handler": "QuantConnect.Messaging.Messaging",
  "job-queue-handler": "QuantConnect.Queues.JobQueue",
  "api-handler": "QuantConnect.Api.Api",
  "map-file-provider": "QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider",
  "factor-file-provider": "QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider",
  "data-provider": "QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider",
  //"data-provider": "QuantConnect.Lean.Engine.DataFeeds.ApiDataProvider",
  "alpha-handler": "QuantConnect.Lean.Engine.Alphas.DefaultAlphaHandler",

  // limits on number of symbols to allow
  "symbol-minute-limit": 10000,
  "symbol-second-limit": 10000,
  "symbol-tick-limit": 10000,

  // limits the amount of data points per chart series. Applies only for backtesting
  "maximum-data-points-per-chart-series": 4000,

  // if one uses true in following token, market hours will remain open all hours and all days.
  // if one uses false will make lean operate only during regular market hours.
  "force-exchange-always-open": false,

  // save list of transactions to the specified csv file
  "transaction-log": "",

  // To get your api access token go to quantconnect.com/account
  "job-user-id": "0",
  "api-access-token": "",

  // live data configuration
  "live-data-url": "ws://www.quantconnect.com/api/v2/live/data/",
  "live-data-port": 8020,

  // wind brokers configuration
  "wind-account": "W3396699086",
  "wind-password": "*",
  "wind-agent-description": "Wind",
  "wind-enable-delayed-streaming-data": false,

  // mom brokers configuration
  "mom-trade-server": "tcp://127.0.0.1:5001",
  "mom-marketdata-server": "tcp://127.0.0.1:5000",
  "mom-userId": "test",
  "mom-passwd": "test",

  // interactive brokers configuration
  "ib-account": "",
  "ib-user-name": "",
  "ib-password": "",
  "ib-host": "127.0.0.1",
  "ib-port": "4002",
  "ib-agent-description": "Individual",
  "ib-tws-dir": "C:\\Jts",
  "ib-trading-mode": "paper",
  "ib-enable-delayed-streaming-data": false,

  // tradier configuration
  "tradier-account-id": "",
  "tradier-access-token": "",
  "tradier-refresh-token": "",
  "tradier-issued-at": "",
  "tradier-lifespan": "",
  "tradier-refresh-session": true,

  // oanda configuration
  "oanda-environment": "Practice",
  "oanda-access-token": "",
  "oanda-account-id": "",

  // fxcm configuration
  "fxcm-server": "http://www.fxcorporate.com/Hosts.jsp",
  "fxcm-terminal": "Demo", //Real or Demo
  "fxcm-user-name": "",
  "fxcm-password": "",
  "fxcm-account-id": "",

  // iqfeed configuration
  "iqfeed-username": "",
  "iqfeed-password": "",
  "iqfeed-productName": "",
  "iqfeed-version": "1.0",

  // gdax configuration
  "gdax-api-secret": "",
  "gdax-api-key": "",
  "gdax-passphrase": "",

  // bitfinex configuration
  "bitfinex-api-secret": "",
  "bitfinex-api-key": "",

  // deribit configuration
  //"deribit-rest": "https://www.deribit.com/api/v2",
  //"deribit-url": "wss://www.deribit.com/ws/api/v2",
  //"deribit-api-secret": "M_uh8jwHB4vfNnQ5ZfwrhfOry64JH4aWv05y8Xf4vZk",
  //"deribit-api-key": "Z9T06fZ8",
  //"deribit-rest": "https://test.deribit.com/api/v2",
  //"deribit-url": "wss://test.deribit.com/ws/api/v2",
  //"deribit-api-secret": "Uj9hjQ8VTVy-GuXpHdFO11rYWvHUU8-SjPJqSF5SW-I",
  //"deribit-api-key": "3b8BuABy",
  //"deribit-api-secret": "TcSt9TpxcNg0TMNGsZXl8fgRM-hdFWSMFqwwVDfdja8",
  //"deribit-api-key": "7dhewnqR",

  "deribit-rest": "https://test.deribit.com/api/v2",
  "deribit-url": "wss://test.deribit.com/ws/api/v2",
  "deribit-api-secret": "_pNXhHtyVX-sRJqPeez0m1ReKyvhvo6T6zBiUllsN_A",
  "deribit-api-key": "hzWoBuXg",
  "deribit-update-cashbook": false,
  "deribit-future-leverage": 100,
  "deribit-subscribe-trades": false,
  "deribit-tick-path": "D:/data",
  "deribit-tick-islog": true,


  // okex configuration  
  "okex-rest": "https://www.okex.com/",
  "okex-url": "wss://real.okex.com:8443/ws/v3",
  "okex-api-secret": "",
  "okex-api-key": "",
  "okex-api-passPhrase": "",
  "okex-time-adj-second": "1",
  "okex-enable-spot": false,
  "okex-enable-future": false,
  "okex-enable-swap": false,
  "okex-enable-option": true,
  "okex-margin-mode-future": "crossed",
  "okex-margin-mode-swap": "crossed",
  "okex-update-cashbook": false,

  "multi-broker-1": "OkexBrokerage",
  "multi-broker-2": "DeribitBrokerage",

  "momcrypto-trade-server": "tcp://127.0.0.1:5003",
  "momcrypto-marketdata-server": "tcp://127.0.0.1:5002",
  "momcrypto-historydata-server": "http://94.74.88.76:7004/",
  "momcrypto-userId": "yixuan_binance",
  "momcrypto-passwd": "yixuan_binance",
  "slack-call-token": "https://pushcall.boomware.com/api/make/T0203G8JHLG/boomware?number=8613683386181",
  "ftx-enable-spot-margin": true,


  // Required to access data from Quandl
  // To get your access token go to https://www.quandl.com/account/api
  "quandl-auth-token": "",

  // Required to access data from Tiingo
  // To get your access token go to https://www.tiingo.com
  "tiingo-auth-token": "",

  // Required to access data from US Energy Information Administration
  // To get your access token go to https://www.eia.gov/opendata
  "us-energy-information-auth-token": "",


  // set FillModel of DefaultBrokerageModel 
  "default-fill-model": "ImmediateFillModel", //BestPriceFillModel , ImmediateFillModel

  "store-result": false,

  // alpaca configuration
  // available trading mode: 'paper', 'live'
  "alpaca-key-id": "",
  "alpaca-secret-key": "",
  "alpaca-trading-mode": "paper",

  // parameters to set in the algorithm (the below are just samples)
  "parameters": {
    "momcrypto-userId": "binance_hybrid_backtest",
    "bull-json": "/home/linzhuoyuan/configs/binance/Collar_Delta_Info_Binance_Bull.json",
    "bear-json": "/home/linzhuoyuan/configs/binance/Collar_Delta_Info_Binance_Bear.json",
    "twap-interval-seconds": 120, //default to 12
    "total-twap-trades": 1, //default to 5
    "max-open-order-seconds": 120, //default to 5
    "max-orders-per-half-second": 2, //default to 2
    "dingding-key": "Backtest",
    "dingding-token": "Backtest",
    "warm-up-resolution": "Minute",
    "warm-up-periods": 34560,
    "lambda": 0.99989, //0.99989,//0.94
    "start": "2023/4/1",
    "end": "2023/8/15",
    "output-base-directory": "/home/linzhuoyuan/configs/binance/output-bull-20211101-20220821-2_save1",
    "get-base": true,
    "statistics-summary": "/home/linzhuoyuan/configs/binance/statistics-summary.csv",
    "asset-allocation-config-file": "/home/linzhuoyuan/configs/binance/asset-allocation-bull.csv"
  },

  "environments": {

    // defines the 'backtesting' environment
    "backtesting": {
      "live-mode": false,
      "messaging-handler": "QuantConnect.Messaging.Messaging",
      "desktop-http-port": "1250",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.BacktestingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler",
      "history-provider": "QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"
    },

    // defines the 'live-paper' environment
    "live-paper": {
      "live-mode": true,

      // the paper brokerage requires the BacktestingTransactionHandler
      "live-mode-brokerage": "PaperBrokerage",

      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "data-queue-handler": "QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"
    },

    // defines the 'live-tradier' environment
    "live-tradier": {
      "live-mode": true,

      // this setting will save tradier access/refresh tokens to a tradier-tokens.txt file
      // that can be read in next time, this makes it easier to start/stop a tradier algorithm
      "tradier-save-tokens": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "TradierBrokerage",
      "data-queue-handler": "TradierBrokerage",

      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"
    },

    // defines the 'live-interactive' environment
    "live-interactive": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "InteractiveBrokersBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "data-queue-handler": "QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"
    },

    // defines the 'live-interactive-iqfeed' environment
    "live-interactive-iqfeed": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "InteractiveBrokersBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "data-queue-handler": "QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "QuantConnect.ToolBox.IQFeed.IQFeedDataQueueHandler"
    },

    // defines the 'live-fxcm' environment
    "live-fxcm": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "FxcmBrokerage",
      "data-queue-handler": "FxcmBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"
    },

    // defines the 'live-oanda' environment
    "live-oanda": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "OandaBrokerage",
      "data-queue-handler": "OandaBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"
    },

    // defines the 'backtesting-desktop' environment
    "backtesting-desktop": {
      "live-mode": false,
      "send-via-api": false,

      "setup-handler": "QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.BacktestingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "log-handler": "QuantConnect.Logging.QueueLogHandler",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Release/Monitor.exe"
    },

    // defines the 'live-desktop' environment
    "live-desktop": {
      "live-mode": true,
      "send-via-api": false,

      // Set your own brokerage and data queue handlers here.
      // Live desktop charting isn't as cool as on quantconnect.com but its pretty neat!
      "live-mode-brokerage": "FxcmBrokerage",
      "data-queue-handler": "FxcmBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "log-handler": "QuantConnect.Logging.QueueLogHandler",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Debug/Monitor.exe"
    },

    // defines the 'live-wind' environment
    "live-wind-desktop": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "WindBrokerage",
      "data-queue-handler": "WindBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Debug/Monitor.exe"
    },

    "live-gdax": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "GDAXBrokerage",
      "data-queue-handler": "GDAXDataQueueHandler",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"
    },

    "live-bitfinex": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "BitfinexBrokerage",
      "data-queue-handler": "BitfinexBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"
    },

    "live-deribit-desktop": {
      "live-mode": true,
      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "DeribitBrokerage",
      "data-queue-handler": "DeribitBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Debug/Monitor.exe"
    },

    "live-deribit": {
      "live-mode": true,
      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "DeribitBrokerage",
      "data-queue-handler": "DeribitBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"
    },

    "live-okex-desktop": {
      "live-mode": true,
      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "OkexBrokerage",
      "data-queue-handler": "OkexBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Debug/Monitor.exe"
    },


    // defines the 'live-mom' environment
    "live-mom": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "QuantConnect.Brokerages.Mom.MomBrokerage",
      "data-queue-handler": "QuantConnect.Brokerages.Mom.MomBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      //"messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider"
      //"desktop-http-port": "1234",
      // "desktop-exe": "../../../Monitor/bin/Debug/Monitor.exe"
    },


    // defines the 'live-mom-desktop' environment
    "live-mom-desktop": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "QuantConnect.Brokerages.Mom.MomBrokerage",
      "data-queue-handler": "QuantConnect.Brokerages.Mom.MomBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Debug/Monitor.exe"
    },


    "live-momcrypto": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "QuantConnect.Brokerages.MomCrypto.MomCryptoBrokerage",
      "data-queue-handler": "QuantConnect.Brokerages.MomCrypto.MomCryptoBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      //"messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider"
      //"desktop-http-port": "1234",
      //"desktop-exe": "../../../Monitor/bin/Debug/Monitor.exe"
    },

    // defines the 'live-alpaca' environment
    "live-alpaca": {
      "live-mode": true,

      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "AlpacaBrokerage",
      "data-queue-handler": "AlpacaBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "history-provider": "BrokerageHistoryProvider"

    },

    "live-multi-desktop": {
      "live-mode": true,
      // real brokerage implementations require the BrokerageTransactionHandler
      "live-mode-brokerage": "MultiBrokerage",
      "data-queue-handler": "MultiBrokerage",
      "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
      "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
      "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
      "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
      "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
      "messaging-handler": "QuantConnect.Messaging.StreamingMessageHandler",
      "history-provider": "BrokerageHistoryProvider",
      "desktop-http-port": "1234",
      "desktop-exe": "../../../../Monitor/bin/Debug/Monitor.exe"
    }

  }
}
